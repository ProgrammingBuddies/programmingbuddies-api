version: 2

jobs:
  build:
    machine: true
    steps:
      - checkout
      # Build the application image to make sure it works
      - run:
          command: docker build -t programmingbuddies/programmingbuddies-api .
          name: Build docker image

  test:
    docker:
      - image: circleci/python:3.7 # every job must define an image for the docker executor and subsequent jobs may define a different image.
        environment:
          CONNECT: "mysql+mysqlconnector://PB:secret@localhost:3306/pbapi-db"
          SERVER_HOST: "0.0.0.0"
          SERVER_PORT: "5001"
      - image: mysql:8.0.20 # an example of how to specify a service container
        environment:
          MYSQL_ROOT_PASSWORD: "secret-root"
          MYSQL_PASSWORD: "secret"
          MYSQL_USER: "PB"
          MYSQL_DATABASE: "pbapi-db"
    steps: # steps that comprise the `build` job
    - checkout # check out source code to working directory
    - run:
        command: |
            sudo pip install pipenv
            pipenv install
    - run:
        command: |
            pipenv run pytest tests/

  docker-push:
    machine: true
    steps:
      - checkout
      # Log into dockerhub using docker cli.
      # Credentials are stored in the UI using env variables (They are kept secret don't worry)
      # https://circleci.com/docs/2.0/env-vars/#secrets-masking
      - run: 
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
          name: Dockerhub login

      # Build the image.
      # We could use something like $CIRCLE_BRANCH to correctly tag images,
      # but latest is probably fine for now.
      - run:
           command: docker build -t programmingbuddies/programmingbuddies-api:latest .
           name: Build docker image

      # Push the built image to the dockerhub organization
      - run:
           command: docker push programmingbuddies/programmingbuddies-api:latest
           name: Push image to registry

workflows:
  main:
    jobs:
      - build
      - test:
          requires:
            - build
      - docker-push:
          filters:
            branches:
              only:
                - develop
          requires:
            - build
            - test
